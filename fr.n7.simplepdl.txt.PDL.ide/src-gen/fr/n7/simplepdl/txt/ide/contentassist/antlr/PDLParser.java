/*
 * generated by Xtext 2.12.0
 */
package fr.n7.simplepdl.txt.ide.contentassist.antlr;

import com.google.inject.Inject;
import fr.n7.simplepdl.txt.ide.contentassist.antlr.internal.InternalPDLParser;
import fr.n7.simplepdl.txt.services.PDLGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class PDLParser extends AbstractContentAssistParser {

	@Inject
	private PDLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalPDLParser createParser() {
		InternalPDLParser result = new InternalPDLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getProcessElementAccess().getAlternatives(), "rule__ProcessElement__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getWorkSequenceTypeAccess().getAlternatives(), "rule__WorkSequenceType__Alternatives");
					put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
					put(grammarAccess.getWorkDefinitionAccess().getGroup(), "rule__WorkDefinition__Group__0");
					put(grammarAccess.getWorkDefinitionAccess().getGroup_3(), "rule__WorkDefinition__Group_3__0");
					put(grammarAccess.getWorkDefinitionAccess().getGroup_3_2(), "rule__WorkDefinition__Group_3_2__0");
					put(grammarAccess.getWorkSequenceAccess().getGroup(), "rule__WorkSequence__Group__0");
					put(grammarAccess.getGuidanceAccess().getGroup(), "rule__Guidance__Group__0");
					put(grammarAccess.getGuidanceAccess().getGroup_3(), "rule__Guidance__Group_3__0");
					put(grammarAccess.getGuidanceAccess().getGroup_4(), "rule__Guidance__Group_4__0");
					put(grammarAccess.getGuidanceAccess().getGroup_4_3(), "rule__Guidance__Group_4_3__0");
					put(grammarAccess.getRessourceAccess().getGroup(), "rule__Ressource__Group__0");
					put(grammarAccess.getAllocationAccess().getGroup(), "rule__Allocation__Group__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getProcessAccess().getNameAssignment_2(), "rule__Process__NameAssignment_2");
					put(grammarAccess.getProcessAccess().getProcessElementAssignment_4(), "rule__Process__ProcessElementAssignment_4");
					put(grammarAccess.getWorkDefinitionAccess().getNameAssignment_2(), "rule__WorkDefinition__NameAssignment_2");
					put(grammarAccess.getWorkDefinitionAccess().getAllocationAssignment_3_1(), "rule__WorkDefinition__AllocationAssignment_3_1");
					put(grammarAccess.getWorkDefinitionAccess().getAllocationAssignment_3_2_1(), "rule__WorkDefinition__AllocationAssignment_3_2_1");
					put(grammarAccess.getWorkSequenceAccess().getLinkTypeAssignment_1(), "rule__WorkSequence__LinkTypeAssignment_1");
					put(grammarAccess.getWorkSequenceAccess().getPredecessorAssignment_3(), "rule__WorkSequence__PredecessorAssignment_3");
					put(grammarAccess.getWorkSequenceAccess().getSuccessorAssignment_5(), "rule__WorkSequence__SuccessorAssignment_5");
					put(grammarAccess.getGuidanceAccess().getTextAssignment_3_1(), "rule__Guidance__TextAssignment_3_1");
					put(grammarAccess.getGuidanceAccess().getElementsAssignment_4_2(), "rule__Guidance__ElementsAssignment_4_2");
					put(grammarAccess.getGuidanceAccess().getElementsAssignment_4_3_1(), "rule__Guidance__ElementsAssignment_4_3_1");
					put(grammarAccess.getRessourceAccess().getNameAssignment_1(), "rule__Ressource__NameAssignment_1");
					put(grammarAccess.getRessourceAccess().getCountAssignment_2(), "rule__Ressource__CountAssignment_2");
					put(grammarAccess.getAllocationAccess().getNeededAssignment_3(), "rule__Allocation__NeededAssignment_3");
					put(grammarAccess.getAllocationAccess().getRessourceAssignment_5(), "rule__Allocation__RessourceAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PDLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PDLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
